/*
 * Copyright (c) 2018, 2024 Oracle and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.helidon.declarative.tests.http;

import io.helidon.service.inject.api.InjectRegistry;
import io.helidon.service.inject.api.Injection;
import io.helidon.webserver.WebServer;

/**
 * Custom application main class.
 * <p>
 * The {@link io.helidon.declarative.tests.http.GeneratedMain} is generated by a Maven plugin, and is
 * responsible for binding all service descriptors to the service registry, to avoid reflection at runtime.
 * <p>
 * This class is not needed, it is here to prove the annotation processor generates the stub as required.
 */
@Injection.Main // annotation is required to generate a stub during annotation processing
public final class Main extends GeneratedMain {

    /**
     * Cannot be instantiated.
     */
    private Main() {
    }

    /**
     * Application main entry point.
     *
     * @param args command line arguments.
     */
    public static void main(String[] args) {
        new Main().start(args);
    }

    @Override
    protected void afterInit(InjectRegistry registry) {
        int port = registry.get(WebServer.class).port();
        System.out.println("WEB server is up! http://localhost:" + port + "/greet");
    }
}
